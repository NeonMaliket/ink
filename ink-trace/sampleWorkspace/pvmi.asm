// RO data = 3044/3044 bytes
// RW data = 8/1065000 bytes
// Stack size = 8192 bytes

// Instructions = 2358
// Code size = 7004 bytes

      : @0
     0: sp = sp + 0xffffffffffffffc8
     3: u64 [sp + 0x30] = ra
     6: u64 [sp + 0x28] = s0
     9: u64 [sp + 0x20] = s1
    12: t0 = a0
    14: jump @13 if a2 <u 16
      : @1
    19: i32 a5 = -t0
    21: t2 = a5 & 0x7
    24: s0 = t0 + t2
    27: a0 = a1
    29: a3 = t0
    31: jump @3 if t0 >=u s0
      : @2
    34: a4 = u8 [a0]
    36: a0 = a0 + 0x1
    39: u8 [a3] = a4
    41: a3 = a3 + 0x1
    44: jump @2 if a3 <u s0
      : @3
    47: a5 = a1 + t2
    50: s1 = a2 - t2
    53: a2 = s1 & 0xfffffffffffffff8
    56: a4 = a5 & 0x7
    59: a3 = s0 + a2
    62: jump @25 if a4 == 0
      : @4
    66: u64 [sp] = a2
    68: u64 [sp + 0x8] = s1
    71: u64 [sp + 0x10] = a5
    74: s0 = 0
    76: u64 [sp + 24] = 0
    79: s1 = 0x8 - a4
    82: a2 = sp + 0x18
    85: a0 = s1 & 0x1
    88: t1 = a2 | a4
    91: jump @6 if a0 == 0
      : @5
    94: a0 = u64 [sp + 0x10]
    97: a0 = u8 [a0]
    99: u8 [t1] = a0
   101: s0 = 0x1
   104: fallthrough
      : @6
   105: a0 = s1 & 0x2
   108: jump @8 if a0 == 0
      : @7
   111: a0 = u64 [sp + 0x10]
   114: a0 = a0 + s0
   117: a0 = i16 [a0]
   119: a2 = t1 + s0
   122: u16 [a2] = a0
   124: s0 = s0 + 0x2
   127: fallthrough
      : @8
   128: a0 = s1 & 0x4
   131: s1 = a4 << 0x3
   134: jump @10 if a0 == 0
      : @9
   137: a0 = u64 [sp + 0x10]
   140: a0 = a0 + s0
   143: a0 = i32 [a0]
   145: t1 = t1 + s0
   148: u32 [t1] = a0
   150: fallthrough
      : @10
   151: a2 = u64 [sp + 0x18]
   154: i32 a0 = -s1
   156: ra = a0 & 0x38
   159: a1 = a1 - a4
   162: t1 = a1 + 0x8
   165: a0 = t0
   167: fallthrough
      : @11
   168: a5 = a0 + t2
   171: a4 = a5 + 0x8
   174: a1 = t1 + t2
   177: s0 = a2 >> s1
   180: jump @14 if a4 >=u a3
      : @12
   183: a2 = u64 [a1]
   185: t1 = t1 + 0x8
   188: a1 = a2 << ra
   191: a1 = a1 | s0
   194: u64 [a5] = a1
   196: a0 = a0 + 0x8
   199: jump @11
      : @13
   201: a3 = t0
   203: jump @22
      : @14
   205: s1 = 0
   207: a4 = u64 [sp + 0x10]
   210: a0 = a4 & 0x4
   213: u64 [sp + 24] = 0
   216: jump @16 if a0 == 0
      : @15
   219: a0 = i32 [a1]
   221: u32 [sp + 0x18] = a0
   224: s1 = 0x4
   227: fallthrough
      : @16
   228: a0 = a4 & 0x2
   231: jump @18 if a0 == 0
      : @17
   234: a0 = s1 + t2
   237: a0 = a0 + t1
   240: a0 = i16 [a0]
   242: a1 = sp + 0x18
   245: a1 = a1 | s1
   248: u16 [a1] = a0
   250: s1 = s1 + 0x2
   253: fallthrough
      : @18
   254: a0 = a4 & 0x1
   257: jump @20 if a0 == 0
      : @19
   260: t2 = t2 + s1
   263: t1 = t1 + t2
   266: a0 = u8 [t1]
   268: a1 = sp + 0x18
   271: a1 = a1 | s1
   274: u8 [a1] = a0
   276: fallthrough
      : @20
   277: a0 = u64 [sp + 0x18]
   280: a0 = a0 << ra
   283: a0 = a0 | s0
   286: u64 [a5] = a0
   288: s1 = u64 [sp + 0x8]
   291: a2 = u64 [sp]
   293: a1 = a4 + a2
   296: a2 = s1 & 0x7
   299: jump @22
      : @21
   301: a1 = a4 + a2
   304: a2 = s1 & 0x7
   307: fallthrough
      : @22
   308: a2 = a2 + a3
   311: jump @24 if a3 >=u a2
      : @23
   314: a0 = u8 [a1]
   316: a1 = a1 + 0x1
   319: u8 [a3] = a0
   321: a3 = a3 + 0x1
   324: jump @23 if a3 <u a2
      : @24
   327: a0 = t0
   329: ra = u64 [sp + 0x30]
   332: s0 = u64 [sp + 0x28]
   335: s1 = u64 [sp + 0x20]
   338: sp = sp + 0x38
   341: ret
      : @25
   343: a0 = a5
   345: a4 = a5
   347: jump @21 if s0 >=u a3
      : @26
   350: a1 = u64 [a0]
   352: a0 = a0 + 0x8
   355: u64 [s0] = a1
   357: s0 = s0 + 0x8
   360: jump @21 if s0 >=u a3
      : @27
   363: jump @26
      : @28
   365: sp = sp + 0xfffffffffffffff0
   368: u64 [sp + 0x8] = ra
   371: a3 = a1
   373: u8 [sp + 0x7] = a0
   376: a1 = sp + 0x7
   379: a2 = 0x1
   382: a0 = a3
   384: ra = 0xec
   388: jump @385
      : @29
   391: sp = sp + 0xffffffffffffff88
   394: u64 [sp + 0x70] = ra
   397: u64 [sp + 0x68] = s0
   400: u64 [sp + 0x60] = s1
   403: a0 = 0x130008
   408: u64 [sp] = a0
   410: u64 [sp + 8] = 0x4000
   415: u64 [sp + 16] = 0
   418: a0 = sp
   420: a1 = 0x20
   423: ra = 2, jump @440
      : @30 [@dyn 1]
   428: a1 = a1 + 0xffffffffffffffe0
   431: jump @41 if a1 != 0
      : @31
   435: s0 = a0
   437: s1 = sp + 0x18
   440: ra = 0x4
   443: ecalli 4 // 'value_transferred'
   445: fallthrough
      : @32 [@dyn 2]
   446: t0 = u8 [s0]
   448: a1 = u8 [s0 + 0x1]
   451: a2 = u8 [s0 + 0x2]
   454: a3 = u8 [s0 + 0x3]
   457: t1 = u8 [s0 + 0x4]
   460: a5 = u8 [s0 + 0x5]
   463: a0 = u8 [s0 + 0x6]
   466: a4 = u8 [s0 + 0x7]
   469: a1 = a1 << 0x8
   472: a2 = a2 << 0x10
   475: a3 = a3 << 0x18
   478: a5 = a5 << 0x8
   481: a0 = a0 << 0x10
   484: a4 = a4 << 0x18
   487: a1 = a1 | t0
   490: t0 = 6, jump @465
      : @33 [@dyn 3]
   495: u64 [sp + 0x18] = a0
   498: t0 = u8 [s0 + 0x8]
   501: a1 = u8 [s0 + 0x9]
   504: a2 = u8 [s0 + 0xa]
   507: a3 = u8 [s0 + 0xb]
   510: t1 = u8 [s0 + 0xc]
   513: a5 = u8 [s0 + 0xd]
   516: a0 = u8 [s0 + 0xe]
   519: a4 = u8 [s0 + 0xf]
   522: a1 = a1 << 0x8
   525: a2 = a2 << 0x10
   528: a3 = a3 << 0x18
   531: a5 = a5 << 0x8
   534: a0 = a0 << 0x10
   537: a4 = a4 << 0x18
   540: a1 = a1 | t0
   543: t0 = 8, jump @465
      : @34 [@dyn 4]
   548: u64 [sp + 0x20] = a0
   551: t0 = u8 [s0 + 0x10]
   554: a1 = u8 [s0 + 0x11]
   557: a2 = u8 [s0 + 0x12]
   560: a3 = u8 [s0 + 0x13]
   563: t1 = u8 [s0 + 0x14]
   566: a5 = u8 [s0 + 0x15]
   569: a0 = u8 [s0 + 0x16]
   572: a4 = u8 [s0 + 0x17]
   575: a1 = a1 << 0x8
   578: a2 = a2 << 0x10
   581: a3 = a3 << 0x18
   584: a5 = a5 << 0x8
   587: a0 = a0 << 0x10
   590: a4 = a4 << 0x18
   593: a1 = a1 | t0
   596: t0 = 10, jump @465
      : @35 [@dyn 5]
   601: u64 [sp + 0x28] = a0
   604: t0 = u8 [s0 + 0x18]
   607: a1 = u8 [s0 + 0x19]
   610: a2 = u8 [s0 + 0x1a]
   613: a3 = u8 [s0 + 0x1b]
   616: t1 = u8 [s0 + 0x1c]
   619: a5 = u8 [s0 + 0x1d]
   622: a0 = u8 [s0 + 0x1e]
   625: a4 = u8 [s0 + 0x1f]
   628: u64 [sp + 56] = 0
   631: u64 [sp + 64] = 0
   634: u64 [sp + 72] = 0
   637: u64 [sp + 80] = 0
   640: a1 = a1 << 0x8
   643: a2 = a2 << 0x10
   646: a3 = a3 << 0x18
   649: a5 = a5 << 0x8
   652: a0 = a0 << 0x10
   655: a4 = a4 << 0x18
   658: a1 = a1 | t0
   661: t0 = sp + 0x38
   664: a2 = a2 | a3
   667: a3 = a5 | t1
   670: a0 = a0 | a4
   673: a1 = a1 | a2
   676: a0 = a0 | a3
   679: a0 = a0 << 0x20
   682: a0 = a0 | a1
   685: u64 [sp + 0x30] = a0
   688: a0 = 0x4
   691: fallthrough
      : @36
   692: a1 = u8 [s1 + 0x1]
   695: a2 = u8 [s1 + 0x2]
   698: a3 = u8 [s1 + 0x3]
   701: a4 = u8 [s1]
   703: a1 = a1 << 0x8
   706: a2 = a2 << 0x10
   709: a3 = a3 << 0x18
   712: a1 = a1 | a4
   715: a4 = u8 [s1 + 0x4]
   718: a5 = u8 [s1 + 0x5]
   721: a2 = a2 | a3
   724: a3 = u8 [s1 + 0x6]
   727: s0 = u8 [s1 + 0x7]
   730: a5 = a5 << 0x8
   733: a4 = a4 | a5
   736: a3 = a3 << 0x10
   739: s0 = s0 << 0x18
   742: a3 = a3 | s0
   745: s1 = s1 + 0x8
   748: a1 = a1 | a2
   751: a3 = a3 | a4
   754: a3 = a3 << 0x20
   757: a1 = a1 | a3
   760: u64 [t0] = a1
   762: t0 = t0 + 0x8
   765: a0 = a0 + 0xffffffffffffffff
   768: jump @36 if a0 != 0
      : @37
   771: a2 = sp + 0x38
   774: a0 = 0x5
   777: a1 = 0x5
   780: fallthrough
      : @38
   781: a1 = a1 + 0xffffffffffffffff
   784: jump @466 if a1 == 0
      : @39
   788: a3 = u64 [a2]
   790: a2 = a2 + 0x8
   793: jump @38 if a3 == 0
      : @40
   796: a0 = 0x4
   799: jump @466
      : @41
   802: a0 = 0x107e8
   807: a3 = 0x107c8
   812: a4 = 0x109d0
   817: a1 = 0x2b
   820: a2 = sp + 0x5f
   823: jump @370
      : @42
   826: a1 = u64 [a0 + 0x8]
   829: jump @44 if a1 == 0
      : @43
   832: a3 = u64 [a0]
   834: a2 = u8 [a3]
   836: a4 = a1 + 0xffffffffffffffff
   839: a3 = a3 + 0x1
   842: u64 [a0] = a3
   844: u64 [a0 + 0x8] = a4
   847: jump @45
      : @44
   849: a2 = 0
   851: fallthrough
      : @45
   852: a0 = a2 + 0xffffffffffffffff
   855: a0 = a0 >u 0
   857: a3 = a0 + 0x1
   860: a3 = 0 if a2 == 0
   862: a0 = 0x2
   865: a0 = a3 if a1 != 0
   868: ret
      : @46 [@dyn 6]
   870: trap
      : @47 [@dyn 7]
   871: trap
      : @48
   872: ra = 0x10
   875: sp = sp + 0xffffffffffffffd8
   878: u64 [sp + 0x20] = ra
   881: u64 [sp + 0x18] = s0
   884: a0 = 0x130008
   889: s0 = 0x4000
   893: u64 [sp] = a0
   895: u64 [sp + 0x8] = s0
   898: u64 [sp + 16] = 0
   901: a0 = sp
   903: a1 = 0
   905: ra = 0x1a
   908: jump @381
      : @49 [@dyn 8]
   911: trap
      : @50
   912: sp = sp + 0xffffffffffffffb0
   915: u64 [sp + 0x48] = ra
   918: u64 [sp + 0x40] = s0
   921: u64 [sp + 0x38] = s1
   924: u64 [sp] = a0
   926: u64 [sp + 24] = 0
   929: a0 = 0x130008
   934: u64 [sp + 0x20] = a0
   937: u64 [sp + 40] = 0x4000
   942: u64 [sp + 48] = 0
   945: a0 = sp + 0x20
   948: ra = 0x12
   951: a1 = a0
   953: a0 = 0
   955: jump @384
      : @51 [@dyn 9]
   958: a0 = u64 [sp + 0x20]
   961: a2 = u64 [sp + 0x28]
   964: a1 = u64 [sp + 0x30]
   967: u64 [sp + 0x8] = a0
   970: u64 [sp + 0x10] = a2
   973: a0 = sp + 0x8
   976: ra = 20, jump @440
      : @52 [@dyn 10]
   981: s1 = a0
   983: s0 = a1
   985: a0 = u64 [sp + 0x8]
   988: a1 = u64 [sp + 0x10]
   991: u64 [sp + 0x20] = a0
   994: u64 [sp + 0x28] = a1
   997: u64 [sp + 48] = 0
  1000: a1 = sp + 0x20
  1003: a0 = u64 [sp]
  1005: ra = 22, jump @28
      : @53 [@dyn 11]
  1010: a0 = u64 [sp + 0x20]
  1013: a2 = u64 [sp + 0x28]
  1016: a1 = u64 [sp + 0x30]
  1019: u64 [sp + 0x8] = a0
  1022: u64 [sp + 0x10] = a2
  1025: a0 = sp + 0x8
  1028: ra = 24, jump @440
      : @54 [@dyn 12]
  1033: a2 = s0 << 0x20
  1036: a1 = a1 << 0x20
  1039: a2 = a2 >> 0x20
  1042: a4 = a1 >> 0x20
  1045: a3 = a0
  1047: a0 = 0
  1049: a1 = s1
  1051: ecalli 3 // 'set_storage'
  1053: ra = u64 [sp + 0x48]
  1056: s0 = u64 [sp + 0x40]
  1059: s1 = u64 [sp + 0x38]
  1062: sp = sp + 0x50
  1065: ret
      : @55 [@dyn 13]
  1067: a0 = sp
  1069: a1 = 0
  1071: ra = 28, jump @381
      : @56 [@dyn 14]
  1076: a3 = u64 [sp + 0x10]
  1079: i32 s0 = s0 + 0x1
  1082: jump @58 if a3 >=u s0
      : @57
  1085: a0 = 0
  1087: a1 = a3
  1089: ra = 30, jump @463
      : @58 [@dyn 15]
  1094: t0 = 32, jump @468
      : @59 [@dyn 16]
  1099: jump @266
      : @60 [@dyn 17]
  1102: a1 = sp
  1104: a0 = s0
  1106: ra = 36, jump @28
      : @61 [@dyn 18]
  1111: a3 = u64 [sp + 0x10]
  1114: i32 s1 = s1 + 0x1
  1117: jump @63 if a3 >=u s1
      : @62
  1120: a0 = 0
  1122: a1 = a3
  1124: ra = 38, jump @463
      : @63 [@dyn 19]
  1129: t0 = 40, jump @468
      : @64 [@dyn 20]
  1134: jump @266
      : @65
  1137: sp = sp + 0xffffffffffffffd0
  1140: u64 [sp + 0x28] = ra
  1143: u64 [sp + 0x20] = s0
  1146: u64 [sp + 0x18] = s1
  1149: s0 = a0
  1151: s1 = 0
  1153: i32 a1 = a1 + 0
  1155: a0 = 0x130008
  1160: u64 [sp] = a0
  1162: u64 [sp + 8] = 0x4000
  1167: u64 [sp + 16] = 0
  1170: jump @67 if a1 == 0
      : @66
  1173: a0 = sp
  1175: a1 = 0x1
  1178: s1 = 0x1
  1181: ra = 42, jump @381
      : @67 [@dyn 21]
  1186: a0 = sp
  1188: a1 = s1
  1190: ra = 44, jump @381
      : @68 [@dyn 22]
  1195: a3 = u64 [sp + 0x10]
  1198: jump @70 if a3 >=u 16385
      : @69
  1203: a0 = s0
  1205: a1 = a3
  1207: ra = 46, jump @463
      : @70 [@dyn 23]
  1212: t0 = 48, jump @468
      : @71 [@dyn 24]
  1217: jump @266
      : @72
  1220: sp = sp + 0xffffffffffffffc0
  1223: a1 = 0xe8
  1227: a2 = 0x106b0
  1232: u64 [sp + 32] = 0
  1235: u64 [sp + 0x30] = a0
  1238: u64 [sp + 0x38] = a1
  1241: a0 = sp + 0x30
  1244: u64 [sp] = a2
  1246: u64 [sp + 8] = 0x1
  1250: u64 [sp + 0x10] = a0
  1253: u64 [sp + 24] = 0x1
  1257: a1 = 0x100a8
  1262: a0 = sp
  1264: jump @217
      : @73 [export #0: 'call']
  1267: sp = sp + 0xffffffffffffff98
  1270: u64 [sp + 0x60] = ra
  1273: u64 [sp + 0x58] = s0
  1276: u64 [sp + 0x50] = s1
  1279: ra = 50, jump @29
      : @74 [@dyn 25]
  1284: a0 = a0 & 0xff
  1288: jump @82 if a0 != 5
      : @75
  1292: a2 = 0
  1294: s0 = 0x130008
  1299: a0 = 0x130008
  1304: a1 = 0x4000
  1308: ra = 0x34
  1311: ecalli 0 // 'call_data_copy'
  1312: fallthrough
      : @76 [@dyn 26]
  1313: a0 = u32 [0x130008]
  1318: a2 = a0 << 0x30
  1321: a1 = a0 << 0x28
  1324: a3 = a0 & 0xff
  1328: a2 = a2 >> 0x38
  1331: a1 = a1 >> 0x38
  1334: a4 = a3 + 0xffffffffffffffd1
  1337: a0 = a0 >> 0x18
  1340: jump @83 if a4 == 0
      : @77
  1343: a3 = a3 + 0xffffffffffffff9d
  1346: jump @98 if a3 != 0
      : @78
  1350: a2 = a2 + 0xffffffffffffffc6
  1353: jump @98 if a2 != 0
      : @79
  1357: a1 = a1 + 0xffffffffffffff5b
  1361: jump @98 if a1 != 0
      : @80
  1365: a0 = a0 + 0xffffffffffffffaf
  1368: jump @98 if a0 != 0
      : @81
  1372: u64 [sp + 0] = 0
  1374: jump @87
      : @82
  1376: u8 [sp + 32] = 0x4
  1380: a0 = sp + 0x20
  1383: jump @72
      : @83
  1386: a2 = a2 + 0xffffffffffffff7a
  1390: jump @98 if a2 != 0
      : @84
  1394: a1 = a1 + 0xffffffffffffffa5
  1397: jump @98 if a1 != 0
      : @85
  1401: a0 = a0 + 0xffffffffffffff27
  1405: jump @98 if a0 != 0
      : @86
  1409: u64 [sp + 0] = 0x1
  1412: fallthrough
      : @87
  1413: u64 [sp + 24] = 0
  1416: a0 = 0x130008
  1421: u64 [sp + 0x20] = a0
  1424: u64 [sp + 40] = 0x4000
  1429: u64 [sp + 48] = 0
  1432: a0 = sp + 0x20
  1435: ra = 0x36
  1438: a1 = a0
  1440: a0 = 0
  1442: jump @384
      : @88 [@dyn 27]
  1445: a0 = u64 [sp + 0x20]
  1448: a2 = u64 [sp + 0x28]
  1451: a1 = u64 [sp + 0x30]
  1454: u64 [sp + 0x8] = a0
  1457: u64 [sp + 0x10] = a2
  1460: a0 = sp + 0x8
  1463: ra = 56, jump @440
      : @89 [@dyn 28]
  1468: a3 = a0
  1470: s1 = u64 [sp + 0x10]
  1473: s0 = u64 [sp + 0x8]
  1476: a1 = a1 << 0x20
  1479: a2 = a1 >> 0x20
  1482: u32 [sp + 0x20] = s1
  1485: a4 = sp + 0x20
  1488: a0 = 0
  1490: a1 = a3
  1492: a3 = s0
  1494: ecalli 1 // 'get_storage'
  1496: fallthrough
      : @90
  1497: a1 = a0
  1499: a0 = u32 [sp + 0x20]
  1502: jump @105 if s1 <u a0
      : @91
  1506: i32 a1 = a1 + 0
  1508: jump @99 if a1 == 3
      : @92
  1512: jump @100 if a1 != 0
      : @93
  1515: u64 [sp + 0x20] = s0
  1518: u64 [sp + 0x28] = a0
  1521: a0 = sp + 0x20
  1524: ra = 58, jump @42
      : @94 [@dyn 29]
  1529: a0 = a0 & 0xff
  1533: jump @101 if a0 == 2
      : @95
  1537: a1 = u64 [sp + 0x28]
  1540: jump @101 if a1 != 0
      : @96
  1543: a1 = u64 [sp]
  1545: jump @103 if a1 == 0
      : @97
  1549: a0 = a0 & 0x1
  1552: ra = 0xc
  1555: sp = sp + 0xffffffffffffffd0
  1558: u64 [sp + 0x28] = ra
  1561: u64 [sp + 0x20] = s0
  1564: u64 [sp + 0x18] = s1
  1567: s0 = a0
  1569: a0 = 0x130008
  1574: s1 = 0x4000
  1578: u64 [sp] = a0
  1580: u64 [sp + 0x8] = s1
  1583: u64 [sp + 16] = 0
  1586: a0 = sp
  1588: a1 = 0
  1590: ra = 0x22
  1593: jump @381
      : @98
  1596: a1 = 0x1
  1599: a0 = 0x1
  1602: ra = 0xe
  1605: jump @65
      : @99
  1608: a0 = 0x100d8
  1613: jump @102
      : @100
  1615: a0 = 0x10048
  1620: u64 [sp + 64] = 0
  1623: u64 [sp + 0x20] = a0
  1626: u64 [sp + 40] = 0x1
  1630: u64 [sp + 48] = 0x8
  1634: u64 [sp + 56] = 0
  1637: a1 = 0x10058
  1642: a0 = sp + 0x20
  1645: jump @217
      : @101
  1648: a0 = 0x10110
  1653: fallthrough
      : @102
  1654: u64 [sp + 64] = 0
  1657: u64 [sp + 0x20] = a0
  1660: u64 [sp + 40] = 0x1
  1664: u64 [sp + 48] = 0x8
  1668: u64 [sp + 56] = 0
  1671: a1 = 0x100a8
  1676: a0 = sp + 0x20
  1679: jump @217
      : @103
  1682: a1 = 0x1
  1685: a0 = a1 & ~a0
  1688: ra = 60, jump @50
      : @104 [@dyn 30]
  1693: a1 = 0
  1695: a0 = 0
  1697: ra = 0xe
  1700: jump @65
      : @105
  1703: a2 = 0x10ad8
  1708: a1 = s1
  1710: jump @266
      : @106 [export #1: 'deploy']
  1713: sp = sp + 0xffffffffffffffd8
  1716: u64 [sp + 0x20] = ra
  1719: u64 [sp + 0x18] = s0
  1722: u64 [sp + 0x10] = s1
  1725: ra = 62, jump @29
      : @107 [@dyn 31]
  1730: a0 = a0 & 0xff
  1734: jump @117 if a0 != 5
      : @108
  1738: a2 = 0
  1740: s1 = 0x130008
  1745: s0 = 0x130008
  1750: a1 = 0x4000
  1754: a0 = 0x130008
  1759: ra = 0x40
  1762: ecalli 0 // 'call_data_copy'
  1763: fallthrough
      : @109 [@dyn 32]
  1764: a4 = u32 [0x130008]
  1769: s0 = s0 + 0x4
  1772: u64 [sp] = s0
  1774: u64 [sp + 8] = 0x3ffc
  1779: a2 = a4 << 0x30
  1782: a1 = a4 << 0x28
  1785: a3 = a4 & 0xff
  1789: a2 = a2 >> 0x38
  1792: a1 = a1 >> 0x38
  1795: a5 = a3 + 0xffffffffffffff13
  1799: a0 = a4 >> 0x18
  1802: jump @118 if a5 == 0
      : @110
  1805: a3 = a3 + 0xffffffffffffff65
  1809: jump @124 if a3 != 0
      : @111
  1812: a2 = a2 + 0xffffffffffffff52
  1816: jump @124 if a2 != 0
      : @112
  1819: a1 = a1 + 0xffffffffffffff63
  1823: jump @124 if a1 != 0
      : @113
  1826: a0 = a0 + 0xffffffffffffffa2
  1829: jump @124 if a0 != 0
      : @114
  1832: a0 = sp
  1834: ra = 66, jump @42
      : @115 [@dyn 33]
  1839: a0 = a0 & 0xff
  1843: jump @122 if a0 != 2
      : @116
  1847: jump @124
      : @117
  1849: u8 [sp + 0] = 0x4
  1852: a0 = sp
  1854: jump @72
      : @118
  1857: a2 = a2 + 0xffffffffffffffb5
  1860: jump @124 if a2 != 0
      : @119
  1863: a1 = a1 + 0xffffffffffffff63
  1867: jump @124 if a1 != 0
      : @120
  1870: jump @124 if a0 != 27
      : @121
  1874: a0 = 0
  1876: ra = 0x44
  1879: jump @50
      : @122
  1882: ra = 68, jump @50
      : @123 [@dyn 34]
  1887: jump @48
      : @124
  1890: a1 = 0x1
  1893: a0 = 0x1
  1896: ra = 0xe
  1899: jump @65
      : @125
  1902: sp = sp + 0xffffffffffffffc0
  1905: u64 [sp + 0x38] = ra
  1908: u64 [sp + 0x30] = s0
  1911: u64 [sp + 0x28] = s1
  1914: a4 = u64 [a0]
  1916: a2 = u64 [a0 + 0x10]
  1919: a3 = a4 - a2
  1922: jump @127 if a3 <u a1
      : @126
  1925: ra = u64 [sp + 0x38]
  1928: s0 = u64 [sp + 0x30]
  1931: s1 = u64 [sp + 0x28]
  1934: sp = sp + 0x40
  1937: ret
      : @127
  1939: a1 = a1 + a2
  1942: jump @142 if a1 <u a2
      : @128
  1945: s0 = a0
  1947: a2 = a4 << 0x1
  1950: a1 = maxu(a1, a2)
  1953: a2 = 0x8
  1956: a0 = maxu(a1, a2)
  1959: jump @142 if a0 <s 0
      : @129
  1962: jump @131 if a4 == 0
      : @130
  1965: a1 = u64 [s0 + 0x8]
  1968: u64 [sp + 0x8] = a1
  1971: u64 [sp + 32] = 0x1
  1975: a1 = sp + 0x18
  1978: jump @132
      : @131
  1980: a1 = sp + 0x20
  1983: fallthrough
      : @132
  1984: u64 [a1] = a4
  1986: a1 = u64 [sp + 0x20]
  1989: u64 [sp + 0x10] = a0
  1992: jump @138 if a1 == 0
      : @133
  1995: a1 = u64 [sp + 0x18]
  1998: u64 [sp] = a1
  2000: jump @138 if a1 == 0
      : @134
  2003: ra = 70, jump @372
      : @135 [@dyn 35]
  2008: s1 = a0
  2010: jump @140 if a0 == 0
      : @136
  2013: a0 = s1
  2015: a1 = u64 [sp + 0x8]
  2018: a2 = u64 [sp]
  2020: ra = 72, jump @0
      : @137 [@dyn 36]
  2025: jump @140
      : @138
  2027: ra = 74, jump @148
      : @139 [@dyn 37]
  2032: s1 = a0
  2034: fallthrough
      : @140
  2035: jump @143 if s1 == 0
      : @141
  2038: a0 = u64 [sp + 0x10]
  2041: u64 [s0] = a0
  2043: u64 [s0 + 0x8] = s1
  2046: jump @126
      : @142
  2048: a0 = 0
  2050: a2 = 0x101f8
  2055: a1 = u64 [sp + 0x10]
  2058: jump @144
      : @143
  2060: a0 = 0x1
  2063: a2 = 0x101f8
  2068: a1 = u64 [sp + 0x10]
  2071: fallthrough
      : @144
  2072: jump @146 if a0 != 0
      : @145
  2075: a0 = a2
  2077: sp = sp + 0xffffffffffffffd0
  2080: a1 = a0
  2082: a0 = 0x10170
  2087: u64 [sp + 32] = 0
  2090: u64 [sp] = a0
  2092: u64 [sp + 8] = 0x1
  2096: u64 [sp + 16] = 0x8
  2100: u64 [sp + 24] = 0
  2103: a0 = sp
  2105: jump @217
      : @146
  2108: a0 = a1
  2110: ra = 0x4c
  2113: sp = sp + 0xfffffffffffffff8
  2116: u64 [sp] = ra
  2118: sp = sp + 0xffffffffffffffb8
  2121: u64 [sp] = a0
  2123: a0 = sp
  2125: a1 = 0x64
  2128: a2 = 0x102a8
  2133: u64 [sp + 40] = 0
  2136: a4 = sp + 0x38
  2139: u64 [sp + 0x38] = a0
  2142: u64 [sp + 0x40] = a1
  2145: u64 [sp + 0x8] = a2
  2148: u64 [sp + 16] = 0x2
  2152: u64 [sp + 0x18] = a4
  2155: u64 [sp + 32] = 0x1
  2159: a0 = sp + 0x8
  2162: sp = sp + 0xffffffffffffffe8
  2165: a1 = 0x102c8
  2170: u64 [sp] = a0
  2172: u64 [sp + 0x8] = a1
  2175: u16 [sp + 16] = 0
  2178: a0 = sp
  2180: ra = 0xb2
  2184: jump @391
      : @147 [@dyn 38]
  2187: trap
      : @148
  2188: sp = sp + 0xfffffffffffffff0
  2191: u64 [sp + 0x8] = ra
  2194: u64 [sp] = s0
  2196: s0 = a0
  2198: ra = 78, jump @372
      : @149 [@dyn 39]
  2203: a1 = s0
  2205: ra = u64 [sp + 0x8]
  2208: s0 = u64 [sp]
  2210: sp = sp + 0x10
  2213: ret
      : @150 [@dyn 40]
  2215: a2 = a1
  2217: a1 = 0x10128
  2222: jump @295
      : @151 [@dyn 41]
  2225: sp = sp + 0xfffffffffffffff0
  2228: a0 = u64 [a0]
  2230: a1 = sp
  2232: a2 = sp + 0x8
  2235: a2 = a1 if a0 != 0
  2238: u64 [a2] = a0
  2240: sp = sp + 0x10
  2243: ret
      : @152 [@dyn 42]
  2245: sp = sp + 0xfffffffffffffff8
  2248: u64 [sp] = ra
  2250: ra = 0x56
  2253: sp = sp + 0xffffffffffffffd8
  2256: u64 [sp + 0x20] = ra
  2259: u64 [sp + 0x18] = s0
  2262: u64 [sp + 0x10] = s1
  2265: s0 = a2
  2267: u64 [sp + 0x8] = a1
  2270: s1 = a0
  2272: a1 = a2
  2274: ra = 0x5c
  2277: jump @125
      : @153 [@dyn 43]
  2280: a0 = 0
  2282: ra = u64 [sp]
  2284: sp = sp + 0x8
  2287: ret
      : @154 [@dyn 44]
  2289: sp = sp + 0xffffffffffffffc8
  2292: u64 [sp + 0x30] = ra
  2295: u64 [sp + 0x28] = s0
  2298: u64 [sp + 0x20] = s1
  2301: s1 = a1
  2303: s0 = a0
  2305: a2 = 0x80
  2309: i32 a1 = a1 >> 0xb
  2312: i32 a0 = s1 >> 0x10
  2315: u64 [sp] = a0
  2317: u64 [sp + 0x8] = a1
  2320: jump @156 if s1 >=u a2
      : @155
  2323: a1 = 0x1
  2326: jump @159
      : @156
  2328: jump @158 if a1 != 0
      : @157
  2331: a1 = 0x2
  2334: jump @159
      : @158
  2336: a0 = a0 >u 0
  2338: a1 = a0 + 0x3
  2341: fallthrough
      : @159
  2342: a0 = u64 [s0 + 0x10]
  2345: u64 [sp + 0x10] = a0
  2348: a0 = s0
  2350: u64 [sp + 0x18] = a1
  2353: ra = 90, jump @125
      : @160 [@dyn 45]
  2358: a0 = u64 [s0 + 0x8]
  2361: a1 = u64 [s0 + 0x10]
  2364: a0 = a0 + a1
  2367: jump @162 if s1 >=u 128
      : @161
  2372: u8 [a0] = s1
  2374: jump @167
      : @162
  2376: a1 = u64 [sp + 0x8]
  2379: jump @164 if a1 != 0
      : @163
  2382: a1 = s1 >> 0x6
  2385: a2 = s1 & 0x3f
  2388: a1 = a1 | 0xc0
  2392: a2 = a2 | 0x80
  2396: u8 [a0] = a1
  2398: u8 [a0 + 0x1] = a2
  2401: jump @167
      : @164
  2403: a1 = u64 [sp]
  2405: jump @166 if a1 != 0
      : @165
  2408: a1 = s1 >> 0xc
  2411: a2 = s1 << 0x34
  2414: a3 = s1 & 0x3f
  2417: a1 = a1 | 0xe0
  2421: a2 = a2 >> 0x3a
  2424: a3 = a3 | 0x80
  2428: a2 = a2 + 0x80
  2432: u8 [a0] = a1
  2434: u8 [a0 + 0x1] = a2
  2437: u8 [a0 + 0x2] = a3
  2440: jump @167
      : @166
  2442: a1 = s1 >> 0x12
  2445: a2 = s1 << 0x2e
  2448: a3 = s1 << 0x34
  2451: a4 = s1 & 0x3f
  2454: a1 = a1 | 0xf0
  2458: a2 = a2 >> 0x3a
  2461: a3 = a3 >> 0x3a
  2464: a4 = a4 | 0x80
  2468: a2 = a2 + 0x80
  2472: a3 = a3 + 0x80
  2476: u8 [a0] = a1
  2478: u8 [a0 + 0x1] = a2
  2481: u8 [a0 + 0x2] = a3
  2484: u8 [a0 + 0x3] = a4
  2487: fallthrough
      : @167
  2488: a0 = u64 [sp + 0x18]
  2491: a1 = u64 [sp + 0x10]
  2494: a0 = a0 + a1
  2497: u64 [s0 + 0x10] = a0
  2500: a0 = 0
  2502: jump @467
      : @168 [@dyn 46]
  2505: a0 = u64 [s1 + 0x8]
  2508: a1 = u64 [s1 + 0x10]
  2511: u64 [sp] = a1
  2513: a0 = a0 + a1
  2516: a1 = u64 [sp + 0x8]
  2519: a2 = s0
  2521: ra = 94, jump @0
      : @169 [@dyn 47]
  2526: a0 = u64 [sp]
  2528: s0 = s0 + a0
  2531: u64 [s1 + 0x10] = s0
  2534: ra = u64 [sp + 0x20]
  2537: s0 = u64 [sp + 0x18]
  2540: s1 = u64 [sp + 0x10]
  2543: sp = sp + 0x28
  2546: ret
      : @170
  2548: sp = sp + 0xffffffffffffffe0
  2551: u64 [sp + 0x18] = ra
  2554: u64 [sp + 0x10] = s0
  2557: u64 [sp + 0x8] = s1
  2560: s0 = a1
  2562: jump @177 if a1 <s 0
      : @171
  2565: s1 = a0
  2567: jump @175 if s0 == 0
      : @172
  2570: u64 [sp] = a2
  2572: a0 = s0
  2574: ra = 96, jump @148
      : @173 [@dyn 48]
  2579: jump @176 if a0 != 0
      : @174
  2582: a0 = 0x1
  2585: a1 = s0
  2587: a2 = u64 [sp]
  2589: jump @144
      : @175
  2592: a0 = 0x1
  2595: fallthrough
      : @176
  2596: u64 [s1] = s0
  2598: u64 [s1 + 0x8] = a0
  2601: u64 [s1 + 16] = 0
  2604: ra = u64 [sp + 0x18]
  2607: s0 = u64 [sp + 0x10]
  2610: s1 = u64 [sp + 0x8]
  2613: sp = sp + 0x20
  2616: ret
      : @177
  2618: u64 [sp] = a2
  2620: a0 = 0
  2622: a1 = s0
  2624: a2 = u64 [sp]
  2626: jump @144
      : @178 [@dyn 49]
  2629: a2 = u64 [a1 + 0x8]
  2632: a0 = u64 [a1]
  2634: a5 = u64 [a2 + 0x18]
  2637: a1 = 0x10859
  2642: a2 = 0x5
  2645: jump [a5]
      : @179 [@dyn 50]
  2647: sp = sp + 0xffffffffffffff98
  2650: u64 [sp + 0x60] = ra
  2653: u64 [sp + 0x58] = s0
  2656: u64 [sp + 0x50] = s1
  2659: u64 [sp + 0x30] = a1
  2662: a3 = 0
  2664: a5 = u64 [a0]
  2666: ra = 0x2710
  2670: s1 = 0xd8f0
  2675: t1 = sp + 0x3c
  2678: t2 = 0x105ad
  2683: u64 [sp + 0x28] = a5
  2686: fallthrough
      : @180
  2687: jump @182 if a5 <=u 999
      : @181
  2692: s0 = a5 /u ra
  2695: a2 = t1 + a3
  2698: t0 = s0 * s1
  2701: a5 = a5 + t0
  2704: a0 = zext.h a5
  2706: a1 = 0x64
  2709: i32 a0 = a0 /u a1
  2712: a1 = a0 * 0xffffffffffffff9c
  2715: a0 = a0 << 0x1
  2718: a1 = a1 + a5
  2721: a0 = a0 + t2
  2724: a1 = a1 << 0x31
  2727: a1 = a1 >> 0x30
  2730: a1 = a1 + t2
  2733: a5 = u8 [a0]
  2735: a0 = u8 [a0 + 0x1]
  2738: a4 = u8 [a1]
  2740: a1 = u8 [a1 + 0x1]
  2743: u8 [a2 + 0x10] = a5
  2746: u8 [a2 + 0x11] = a0
  2749: u8 [a2 + 0x12] = a4
  2752: u8 [a2 + 0x13] = a1
  2755: a3 = a3 + 0xfffffffffffffffc
  2758: a5 = s0
  2760: jump @180
      : @182
  2762: jump @184 if a5 <=u 9
      : @183
  2766: a0 = zext.h a5
  2768: a1 = 0x64
  2771: i32 a0 = a0 /u a1
  2774: a1 = sp + 0x3c
  2777: a2 = a0 * 0xffffffffffffff9c
  2780: a2 = a2 + a5
  2783: a2 = a2 << 0x31
  2786: a2 = a2 >> 0x30
  2789: a2 = a2 + t2
  2792: a4 = u8 [a2]
  2794: a2 = u8 [a2 + 0x1]
  2797: a1 = a1 + a3
  2800: s1 = a3 + 0x12
  2803: u8 [a1 + 0x12] = a4
  2806: u8 [a1 + 0x13] = a2
  2809: a5 = a0
  2811: jump @185
      : @184
  2813: s1 = a3 + 0x14
  2816: fallthrough
      : @185
  2817: t0 = u64 [sp + 0x30]
  2820: a0 = u64 [sp + 0x28]
  2823: jump @187 if a0 == 0
      : @186
  2826: jump @188 if a5 == 0
      : @187
  2829: a5 = a5 << 0x1
  2832: a5 = a5 & 0x1e
  2835: a5 = a5 + t2
  2838: a0 = u8 [a5 + 0x1]
  2841: s1 = s1 + 0xffffffffffffffff
  2844: a1 = sp + 0x3c
  2847: a1 = a1 + s1
  2850: u8 [a1] = a0
  2852: fallthrough
      : @188
  2853: t1 = sp + 0x3c
  2856: a5 = u32 [t0 + 0x10]
  2859: t2 = 0x2b
  2862: a2 = 0x110000
  2867: a4 = 0x14 - s1
  2870: s0 = a5 & 0x200000
  2875: a0 = s0 >> 0x15
  2878: a1 = a5 << 0x28
  2881: u64 [sp + 0x28] = a4
  2884: a4 = a4 + a0
  2887: jump @190 if a1 <s 0
      : @189
  2890: a3 = 0
  2892: jump @192
      : @190
  2894: a0 = 0x1
  2897: a1 = 0x1
  2900: u64 [sp + 0x20] = s1
  2903: s1 = a4
  2905: u64 [sp + 0x18] = a5
  2908: ra = 102, jump @219
      : @191 [@dyn 51]
  2913: t2 = 0x2b
  2916: t1 = sp + 0x3c
  2919: a5 = u64 [sp + 0x18]
  2922: a4 = s1
  2924: s1 = u64 [sp + 0x20]
  2927: a3 = 0x1
  2930: a2 = 0x110000
  2935: t0 = u64 [sp + 0x30]
  2938: a4 = a4 + a0
  2941: fallthrough
      : @192
  2942: a1 = u16 [t0 + 0x14]
  2945: a0 = t1 + s1
  2948: u64 [sp + 0x20] = a0
  2951: a2 = 0x2b if s0 != 0
  2954: jump @202 if a4 >=u a1
      : @193
  2957: s1 = a5 << 0x27
  2960: jump @206 if s1 <s 0
      : @194
  2964: u64 [sp + 0x18] = a3
  2967: u64 [sp + 0x30] = a2
  2970: i32 a0 = a1 - a4
  2973: a1 = zext.h a0
  2975: a2 = 0x1
  2978: s1 = 0x1
  2981: a0 = t0
  2983: s0 = t0
  2985: ra = 104, jump @242
      : @195 [@dyn 52]
  2990: i32 a3 = a0 + 0
  2992: a2 = 0x110000
  2997: jump @213 if a3 == a2
      : @196
  3001: u64 [sp] = a1
  3003: u64 [sp + 0x8] = a0
  3006: a0 = u64 [s0]
  3008: s0 = u64 [s0 + 0x8]
  3011: u64 [sp + 0x10] = a0
  3014: a1 = s0
  3016: a2 = u64 [sp + 0x30]
  3019: a3 = u64 [sp + 0x18]
  3022: ra = 106, jump @234
      : @197 [@dyn 53]
  3027: jump @213 if a0 != 0
      : @198
  3031: a3 = u64 [s0 + 0x18]
  3034: a0 = u64 [sp + 0x10]
  3037: a1 = u64 [sp + 0x20]
  3040: a2 = u64 [sp + 0x28]
  3043: ra = 108, jump [a3]
      : @199 [@dyn 54]
  3047: jump @213 if a0 != 0
      : @200
  3051: a0 = u64 [sp + 0x8]
  3054: a1 = u64 [sp]
  3056: a2 = u64 [sp + 0x10]
  3059: a3 = s0
  3061: ra = 110, jump @256
      : @201 [@dyn 55]
  3066: jump @205
      : @202
  3068: a0 = t0
  3070: s1 = u64 [a0]
  3072: s0 = u64 [a0 + 0x8]
  3075: a0 = s1
  3077: a1 = s0
  3079: ra = 112, jump @234
      : @203 [@dyn 56]
  3084: jump @212 if a0 != 0
      : @204
  3088: a3 = u64 [s0 + 0x18]
  3091: a0 = s1
  3093: a1 = u64 [sp + 0x20]
  3096: a2 = u64 [sp + 0x28]
  3099: ra = 114, jump [a3]
      : @205 [@dyn 57]
  3103: s1 = a0
  3105: jump @213
      : @206
  3107: u64 [sp + 0x18] = a1
  3110: s0 = a4
  3112: s1 = t0
  3114: a5 = u64 [s1 + 0x10]
  3117: a0 = u64 [s1]
  3119: a1 = u64 [s1 + 0x8]
  3122: u64 [sp] = a5
  3124: a4 = a5 & 0xffffffff9fe00000
  3130: a5 = 0x20000030
  3136: a4 = a4 | a5
  3139: u32 [s1 + 0x10] = a4
  3142: u64 [sp + 0x8] = a0
  3145: u64 [sp + 0x10] = a1
  3148: s1 = t0
  3150: ra = 116, jump @234
      : @207 [@dyn 58]
  3155: jump @212 if a0 != 0
      : @208
  3158: a0 = u64 [sp + 0x18]
  3161: i32 a0 = a0 - s0
  3164: a1 = zext.h a0
  3166: a2 = 0x1
  3169: a0 = s1
  3171: ra = 118, jump @242
      : @209 [@dyn 59]
  3176: s1 = a0
  3178: i32 a0 = a0 + 0
  3180: a2 = 0x110000
  3185: jump @212 if a0 == a2
      : @210
  3188: u64 [sp + 0x18] = a1
  3191: a0 = u64 [sp + 0x10]
  3194: a3 = u64 [a0 + 0x18]
  3197: s0 = u64 [sp + 0x8]
  3200: a0 = s0
  3202: a1 = u64 [sp + 0x20]
  3205: a2 = u64 [sp + 0x28]
  3208: ra = 120, jump [a3]
      : @211 [@dyn 60]
  3212: jump @214 if a0 == 0
      : @212
  3215: s1 = 0x1
  3218: fallthrough
      : @213
  3219: a0 = s1
  3221: ra = u64 [sp + 0x60]
  3224: s0 = u64 [sp + 0x58]
  3227: s1 = u64 [sp + 0x50]
  3230: sp = sp + 0x68
  3233: ret
      : @214
  3235: a0 = s1
  3237: a1 = u64 [sp + 0x18]
  3240: a2 = s0
  3242: a3 = u64 [sp + 0x10]
  3245: ra = 122, jump @256
      : @215 [@dyn 61]
  3250: s1 = 0x1
  3253: jump @213 if a0 != 0
      : @216
  3256: s1 = 0
  3258: a0 = u64 [sp + 0x30]
  3261: a1 = u64 [sp]
  3263: u64 [a0 + 0x10] = a1
  3266: jump @213
      : @217
  3268: sp = sp + 0xffffffffffffffe8
  3271: u64 [sp] = a0
  3273: u64 [sp + 0x8] = a1
  3276: u16 [sp + 16] = 0x1
  3280: a0 = sp
  3282: ra = 124, jump @391
      : @218 [@dyn 62]
  3287: trap
      : @219
  3288: a1 = a1 - a0
  3291: a2 = 0x20
  3294: jump @221 if a1 >=u a2
      : @220
  3297: jump @261
      : @221
  3300: sp = sp + 0xffffffffffffffb8
  3303: u64 [sp + 0x40] = ra
  3306: u64 [sp + 0x38] = s0
  3309: u64 [sp + 0x30] = s1
  3312: a4 = 0x10001
  3317: s1 = a0 + 0x7
  3320: s0 = 0x101010101010101
  3330: a2 = 0xff00ff00ff00ff
  3340: u64 [sp + 0x20] = a2
  3343: s1 = s1 & 0xfffffffffffffff8
  3346: a2 = 0x1000100010001
  3356: u64 [sp + 0x18] = a2
  3359: a2 = s1 - a0
  3362: a1 = a1 - a2
  3365: a3 = a1 >> 0x3
  3368: u64 [sp + 0x28] = a3
  3371: a3 = a1 & 0x7
  3374: u64 [sp + 0x10] = a3
  3377: a1 = a1 & 0xfffffffffffffff8
  3380: a1 = a1 + s1
  3383: u64 [sp + 0x8] = a1
  3386: a1 = a2
  3388: ra = 126, jump @261
      : @222 [@dyn 63]
  3393: u64 [sp] = a0
  3395: a0 = u64 [sp + 0x8]
  3398: a1 = u64 [sp + 0x10]
  3401: ra = 128, jump @261
      : @223 [@dyn 64]
  3407: a1 = u64 [sp + 0x28]
  3410: a5 = u64 [sp]
  3412: a5 = a5 + a0
  3415: fallthrough
      : @224
  3416: jump @233 if a1 == 0
      : @225
  3420: ra = a1
  3422: t1 = s1
  3424: u64 [sp + 0x28] = a5
  3427: a5 = 0
  3429: a0 = 0xc0
  3433: a0 = minu(a1, a0)
  3436: a1 = a0 << 0x3
  3439: a1 = a1 & 0x7e0
  3443: t2 = s1 + a1
  3446: a4 = s1
  3448: jump @229 if s1 == t2
      : @226
  3451: s1 = 0x20
  3454: a3 = a4
  3456: fallthrough
      : @227
  3457: a2 = u64 [a3]
  3459: a3 = a3 + 0x8
  3462: t0 = a2 ^ 0xffffffffffffffff
  3465: a2 = a2 >> 0x6
  3468: a1 = t0 >> 0x7
  3471: a1 = a1 | a2
  3474: a1 = a1 & s0
  3477: a5 = a5 + a1
  3480: s1 = s1 + 0xfffffffffffffff8
  3483: jump @227 if s1 != 0
      : @228
  3486: a4 = a4 + 0x20
  3489: jump @226 if a4 != t2
      : @229
  3492: a1 = ra - a0
  3495: s1 = a0 << 0x3
  3498: t0 = a0 & 0x3
  3501: a4 = u64 [sp + 0x20]
  3504: a3 = a5 & a4
  3507: a5 = a5 >> 0x8
  3510: s1 = s1 + t1
  3513: a4 = a4 & a5
  3516: a3 = a3 + a4
  3519: a2 = u64 [sp + 0x18]
  3522: a3 = a3 * a2
  3525: a3 = a3 >> 0x30
  3528: a5 = u64 [sp + 0x28]
  3531: a5 = a5 + a3
  3534: jump @224 if t0 == 0
      : @230
  3537: a1 = 0
  3539: a3 = 0xc0
  3543: a2 = minu(ra, a3)
  3546: a3 = a0 & 0xfc
  3550: a3 = a3 << 0x3
  3553: t2 = t1 + a3
  3556: a2 = a2 & 0x3
  3559: a2 = a2 << 0x3
  3562: jump @232 if a2 == 0
      : @231
  3565: a3 = u64 [t2]
  3567: t2 = t2 + 0x8
  3570: a4 = a3 ^ 0xffffffffffffffff
  3573: a3 = a3 >> 0x6
  3576: a4 = a4 >> 0x7
  3579: a3 = a3 | a4
  3582: a3 = a3 & s0
  3585: a1 = a1 + a3
  3588: a2 = a2 + 0xfffffffffffffff8
  3591: jump @231 if a2 != 0
      : @232
  3594: a0 = u64 [sp + 0x20]
  3597: a2 = a1 & a0
  3600: a1 = a1 >> 0x8
  3603: a1 = a1 & a0
  3606: a1 = a1 + a2
  3609: a0 = u64 [sp + 0x18]
  3612: a1 = a1 * a0
  3615: a1 = a1 >> 0x30
  3618: a5 = a5 + a1
  3621: fallthrough
      : @233
  3622: a0 = a5
  3624: ra = u64 [sp + 0x40]
  3627: s0 = u64 [sp + 0x38]
  3630: s1 = u64 [sp + 0x30]
  3633: sp = sp + 0x48
  3636: ret
      : @234
  3638: sp = sp + 0xffffffffffffffe0
  3641: u64 [sp + 0x18] = ra
  3644: u64 [sp + 0x10] = s0
  3647: u64 [sp + 0x8] = s1
  3650: s0 = a1
  3652: a4 = 0x110000
  3657: s1 = a0
  3659: jump @238 if a2 == a4
      : @235
  3662: a4 = u64 [s0 + 0x20]
  3665: a0 = s1
  3667: a1 = a2
  3669: u64 [sp] = a3
  3671: ra = 130, jump [a4]
      : @236 [@dyn 65]
  3676: a3 = u64 [sp]
  3678: jump @238 if a0 == 0
      : @237
  3681: a0 = 0x1
  3684: jump @241
      : @238
  3686: jump @240 if a3 == 0
      : @239
  3689: a5 = u64 [s0 + 0x18]
  3692: a0 = s1
  3694: a1 = a3
  3696: a2 = 0
  3698: ra = u64 [sp + 0x18]
  3701: s0 = u64 [sp + 0x10]
  3704: s1 = u64 [sp + 0x8]
  3707: sp = sp + 0x20
  3710: jump [a5]
      : @240
  3712: a0 = 0
  3714: fallthrough
      : @241
  3715: ra = u64 [sp + 0x18]
  3718: s0 = u64 [sp + 0x10]
  3721: s1 = u64 [sp + 0x8]
  3724: sp = sp + 0x20
  3727: ret
      : @242
  3729: sp = sp + 0xffffffffffffffc8
  3732: u64 [sp + 0x30] = ra
  3735: u64 [sp + 0x28] = s0
  3738: u64 [sp + 0x20] = s1
  3741: a5 = i32 [a0 + 0x10]
  3744: a3 = a5 << 0x21
  3747: a3 = a3 >> 0x3e
  3750: a5 = a5 << 0x2b
  3753: u64 [sp] = a1
  3755: jump @246 if a3 == 0
      : @243
  3758: a4 = 0x1
  3761: jump @248 if a3 == a4
      : @244
  3764: a4 = 0x2
  3767: jump @247 if a3 != a4
      : @245
  3770: a1 = a1 >> 0x1
  3773: u64 [sp + 0x18] = a1
  3776: jump @249
      : @246
  3778: u64 [sp + 24] = 0
  3781: jump @249
      : @247
  3783: a1 = 0 if a2 == 0
  3785: u64 [sp + 0x18] = a1
  3788: jump @249
      : @248
  3790: u64 [sp + 0x18] = a1
  3793: fallthrough
      : @249
  3794: s1 = 0
  3796: a1 = u64 [a0]
  3798: u64 [sp + 0x8] = a1
  3801: s0 = u64 [a0 + 0x8]
  3804: a5 = a5 >> 0x2b
  3807: u64 [sp + 0x10] = a5
  3810: fallthrough
      : @250
  3811: a0 = zext.h s1
  3813: a1 = u64 [sp + 0x18]
  3816: jump @254 if a0 >=u a1
      : @251
  3819: a2 = u64 [s0 + 0x20]
  3822: s1 = s1 + 0x1
  3825: a0 = u64 [sp + 0x8]
  3828: a1 = u64 [sp + 0x10]
  3831: ra = 132, jump [a2]
      : @252 [@dyn 66]
  3836: jump @250 if a0 == 0
      : @253
  3839: a0 = 0x110000
  3844: jump @255
      : @254
  3846: a0 = u64 [sp]
  3848: a1 = u64 [sp + 0x18]
  3851: a1 = a0 - a1
  3854: a0 = u64 [sp + 0x10]
  3857: fallthrough
      : @255
  3858: ra = u64 [sp + 0x30]
  3861: s0 = u64 [sp + 0x28]
  3864: s1 = u64 [sp + 0x20]
  3867: sp = sp + 0x38
  3870: ret
      : @256
  3872: sp = sp + 0xffffffffffffffc8
  3875: u64 [sp + 0x30] = ra
  3878: u64 [sp + 0x28] = s0
  3881: u64 [sp + 0x20] = s1
  3884: u64 [sp + 0x10] = a3
  3887: u64 [sp + 0x8] = a2
  3890: s0 = 0
  3892: a1 = zext.h a1
  3894: u64 [sp + 0x18] = a1
  3897: i32 a0 = a0 + 0
  3899: u64 [sp] = a0
  3901: fallthrough
      : @257
  3902: s1 = s0
  3904: a0 = u64 [sp + 0x18]
  3907: jump @260 if s0 >=u a0
      : @258
  3910: a0 = u64 [sp + 0x10]
  3913: a2 = u64 [a0 + 0x20]
  3916: s0 = s1 + 0x1
  3919: a0 = u64 [sp + 0x8]
  3922: a1 = u64 [sp]
  3924: ra = 134, jump [a2]
      : @259 [@dyn 67]
  3929: jump @257 if a0 == 0
      : @260
  3932: a0 = u64 [sp + 0x18]
  3935: a0 = s1 <u a0
  3938: jump @467
      : @261
  3941: jump @265 if a1 == 0
      : @262
  3944: a2 = a0
  3946: a0 = 0
  3948: a1 = a1 + a2
  3951: fallthrough
      : @263
  3952: a3 = i8 [a2]
  3954: a2 = a2 + 0x1
  3957: a3 = a3 <s 0xffffffffffffffc0
  3960: a3 = a3 ^ 0x1
  3963: a0 = a0 + a3
  3966: jump @263 if a2 != a1
      : @264
  3969: ret
      : @265
  3971: a0 = 0
  3973: ret
      : @266
  3975: sp = sp + 0xffffffffffffffa0
  3978: u64 [sp] = a0
  3980: u64 [sp + 0x8] = a1
  3983: a0 = sp
  3985: a1 = 0x64
  3988: a3 = sp + 0x8
  3991: a4 = 0x106c0
  3996: a5 = 0x2
  3999: u64 [sp + 48] = 0
  4002: u64 [sp + 0x40] = a0
  4005: u64 [sp + 0x48] = a1
  4008: u64 [sp + 0x50] = a3
  4011: u64 [sp + 0x58] = a1
  4014: a0 = sp + 0x40
  4017: u64 [sp + 0x10] = a4
  4020: u64 [sp + 0x18] = a5
  4023: u64 [sp + 0x20] = a0
  4026: u64 [sp + 0x28] = a5
  4029: a0 = sp + 0x10
  4032: a1 = a2
  4034: jump @217
      : @267
  4037: sp = sp + 0xffffffffffffffd0
  4040: u64 [sp + 0x28] = ra
  4043: u64 [sp + 0x20] = s0
  4046: u64 [sp + 0x18] = s1
  4049: s1 = a2
  4051: s0 = a0
  4053: a0 = u32 [a0 + 0x10]
  4056: a2 = a0 & 0x18000000
  4062: a3 = a1
  4064: jump @271 if a2 == 0
      : @268
  4067: a0 = a0 << 0x23
  4070: u64 [sp + 0x10] = a3
  4073: jump @272 if a0 <s 0
      : @269
  4076: a1 = a3 + s1
  4079: a0 = a3
  4081: ra = 136, jump @219
      : @270 [@dyn 68]
  4087: jump @284
      : @271
  4090: a1 = u64 [s0 + 0x8]
  4093: a0 = u64 [s0]
  4095: a5 = u64 [a1 + 0x18]
  4098: a1 = a3
  4100: jump @291
      : @272
  4103: t2 = u16 [s0 + 0x16]
  4106: a2 = a3 + s1
  4109: ra = 0xe0
  4113: t1 = 0xf0
  4117: a1 = t2
  4119: a4 = a3
  4121: s1 = 0
  4123: jump @283 if t2 == 0
      : @273
  4126: jump @283 if a4 == a2
      : @274
  4129: a5 = i8 [a4]
  4131: jump @276 if a5 <s 0
      : @275
  4134: a5 = a4 + 0x1
  4137: jump @282
      : @276
  4139: a5 = a5 & 0xff
  4143: jump @280 if a5 <u ra
      : @277
  4146: jump @281 if a5 <u t1
      : @278
  4149: a0 = u8 [a4 + 0x1]
  4152: a3 = u8 [a4 + 0x2]
  4155: t0 = u8 [a4 + 0x3]
  4158: a5 = a5 << 0x3d
  4161: a5 = a5 >> 0x2b
  4164: a0 = a0 & 0x3f
  4167: a3 = a3 & 0x3f
  4170: a0 = a0 << 0xc
  4173: a3 = a3 << 0x6
  4176: a0 = a0 | a3
  4179: a3 = t0 & 0x3f
  4182: a0 = a0 | a3
  4185: a0 = a0 | a5
  4188: a3 = 0x110000
  4193: jump @283 if a0 == a3
      : @279
  4196: a5 = a4 + 0x4
  4199: jump @282
      : @280
  4201: a5 = a4 + 0x2
  4204: jump @282
      : @281
  4206: a5 = a4 + 0x3
  4209: fallthrough
      : @282
  4210: s1 = s1 - a4
  4213: s1 = s1 + a5
  4216: a1 = a1 + 0xffffffffffffffff
  4219: a4 = a5
  4221: jump @273 if a1 != 0
      : @283
  4224: a0 = t2 - a1
  4227: fallthrough
      : @284
  4228: a1 = u16 [s0 + 0x14]
  4231: jump @290 if a0 >=u a1
      : @285
  4234: i32 a1 = a1 - a0
  4237: a1 = zext.h a1
  4239: a0 = s0
  4241: a2 = 0
  4243: ra = 138, jump @242
      : @286 [@dyn 69]
  4249: i32 a3 = a0 + 0
  4251: a2 = 0x110000
  4256: jump @289 if a3 == a2
      : @287
  4259: a4 = a1
  4261: a1 = u64 [s0 + 0x8]
  4264: a2 = u64 [s0]
  4266: s0 = a0
  4268: u64 [sp + 0x8] = a1
  4271: a3 = u64 [a1 + 0x18]
  4274: u64 [sp] = a2
  4276: a0 = a2
  4278: a1 = u64 [sp + 0x10]
  4281: a2 = s1
  4283: s1 = a4
  4285: ra = 140, jump [a3]
      : @288 [@dyn 70]
  4290: jump @292 if a0 == 0
      : @289
  4293: a0 = 0x1
  4296: ra = u64 [sp + 0x28]
  4299: s0 = u64 [sp + 0x20]
  4302: s1 = u64 [sp + 0x18]
  4305: sp = sp + 0x30
  4308: ret
      : @290
  4310: a1 = u64 [s0 + 0x8]
  4313: a0 = u64 [s0]
  4315: a5 = u64 [a1 + 0x18]
  4318: a1 = u64 [sp + 0x10]
  4321: fallthrough
      : @291
  4322: a2 = s1
  4324: ra = u64 [sp + 0x28]
  4327: s0 = u64 [sp + 0x20]
  4330: s1 = u64 [sp + 0x18]
  4333: sp = sp + 0x30
  4336: jump [a5]
      : @292
  4338: a1 = s1
  4340: a0 = s0
  4342: a2 = u64 [sp]
  4344: a3 = u64 [sp + 0x8]
  4347: ra = u64 [sp + 0x28]
  4350: s0 = u64 [sp + 0x20]
  4353: s1 = u64 [sp + 0x18]
  4356: sp = sp + 0x30
  4359: jump @256
      : @293 [@dyn 71]
  4362: a3 = u64 [a0]
  4364: a2 = u64 [a0 + 0x8]
  4367: a0 = a1
  4369: a1 = a3
  4371: jump @267
      : @294 [@dyn 72]
  4374: a2 = u64 [a0 + 0x8]
  4377: a0 = u64 [a0]
  4379: a5 = u64 [a2 + 0x18]
  4382: jump [a5]
      : @295
  4384: sp = sp + 0xffffffffffffff88
  4387: u64 [sp + 0x70] = ra
  4390: u64 [sp + 0x68] = s0
  4393: u64 [sp + 0x60] = s1
  4396: s1 = u64 [a2 + 0x20]
  4399: a3 = 0xe0000020
  4409: u64 [sp + 0x48] = a0
  4412: u64 [sp + 0x50] = a1
  4415: u64 [sp + 0x58] = a3
  4418: jump @306 if s1 == 0
      : @296
  4422: a0 = u64 [a2 + 0x28]
  4425: s0 = u64 [a2]
  4427: a1 = u64 [a2 + 0x8]
  4430: u64 [sp + 0x10] = a1
  4433: a1 = u64 [a2 + 0x10]
  4436: u64 [sp + 0x18] = a1
  4439: a1 = u64 [a2 + 0x18]
  4442: u64 [sp + 0x38] = a1
  4445: a2 = a0 << 0x4
  4448: a0 = a0 * 0x30
  4451: u64 [sp + 0x40] = a0
  4454: a2 = a2 >> 0x4
  4457: u64 [sp + 0x8] = a2
  4460: u64 [sp] = s0
  4462: s0 = s0 + 0x8
  4465: fallthrough
      : @297
  4466: a0 = u64 [sp + 0x40]
  4469: jump @314 if a0 == 0
      : @298
  4473: a2 = u64 [s0]
  4475: jump @301 if a2 == 0
      : @299
  4478: a3 = u64 [sp + 0x50]
  4481: a0 = u64 [sp + 0x48]
  4484: a1 = u64 [s0 + 0xfffffffffffffff8]
  4487: a3 = u64 [a3 + 0x18]
  4490: ra = 146, jump [a3]
      : @300 [@dyn 73]
  4495: jump @317 if a0 != 0
      : @301
  4499: a0 = s1 + 0x30
  4502: u64 [sp + 0x28] = a0
  4505: a2 = s1 + 0x10
  4508: u64 [sp + 0x30] = s0
  4511: s0 = u64 [sp + 0x18]
  4514: a0 = s0
  4516: ra = 148, jump @319
      : @302 [@dyn 74]
  4522: u64 [sp + 0x20] = a0
  4525: a0 = s0
  4527: a2 = s1
  4529: ra = 150, jump @319
      : @303 [@dyn 75]
  4535: a1 = u64 [s1 + 0x20]
  4538: a3 = i32 [s1 + 0x28]
  4541: a1 = a1 << 0x4
  4544: a1 = a1 + s0
  4547: s0 = u64 [sp + 0x30]
  4550: a2 = u64 [a1]
  4552: a4 = u64 [a1 + 0x8]
  4555: u32 [sp + 0x58] = a3
  4558: a1 = u64 [sp + 0x20]
  4561: u16 [sp + 0x5c] = a1
  4564: u16 [sp + 0x5e] = a0
  4567: a1 = sp + 0x48
  4570: a0 = a2
  4572: ra = 152, jump [a4]
      : @304 [@dyn 76]
  4577: a1 = u64 [sp + 0x40]
  4580: a1 = a1 + 0xffffffffffffffd0
  4583: u64 [sp + 0x40] = a1
  4586: s0 = s0 + 0x10
  4589: s1 = u64 [sp + 0x28]
  4592: jump @297 if a0 == 0
      : @305
  4595: jump @317
      : @306
  4598: a1 = u64 [a2 + 0x10]
  4601: s0 = u64 [a2 + 0x18]
  4604: s1 = u64 [a2]
  4606: a0 = u64 [a2 + 0x8]
  4609: u64 [sp + 0x10] = a0
  4612: u64 [sp + 0x8] = s0
  4615: s0 = s0 << 0x4
  4618: u64 [sp] = s1
  4620: s1 = s1 + 0x8
  4623: fallthrough
      : @307
  4624: jump @314 if s0 == 0
      : @308
  4627: a2 = u64 [s1]
  4629: jump @311 if a2 == 0
      : @309
  4632: a3 = u64 [sp + 0x50]
  4635: a0 = u64 [sp + 0x48]
  4638: u64 [sp + 0x40] = a1
  4641: a1 = u64 [s1 + 0xfffffffffffffff8]
  4644: a3 = u64 [a3 + 0x18]
  4647: ra = 154, jump [a3]
      : @310 [@dyn 77]
  4652: a1 = u64 [sp + 0x40]
  4655: jump @317 if a0 != 0
      : @311
  4658: a0 = u64 [a1]
  4660: a2 = u64 [a1 + 0x8]
  4663: a1 = a1 + 0x10
  4666: u64 [sp + 0x40] = a1
  4669: a1 = sp + 0x48
  4672: ra = 156, jump [a2]
      : @312 [@dyn 78]
  4677: s0 = s0 + 0xfffffffffffffff0
  4680: s1 = s1 + 0x10
  4683: a1 = u64 [sp + 0x40]
  4686: jump @307 if a0 == 0
      : @313
  4689: jump @317
      : @314
  4691: a0 = u64 [sp + 0x10]
  4694: a1 = u64 [sp + 0x8]
  4697: jump @318 if a1 >=u a0
      : @315
  4700: a1 = a1 << 0x4
  4703: a0 = u64 [sp + 0x48]
  4706: a3 = u64 [sp + 0x50]
  4709: a2 = u64 [sp]
  4711: a2 = a2 + a1
  4714: a1 = u64 [a2]
  4716: a2 = u64 [a2 + 0x8]
  4719: a3 = u64 [a3 + 0x18]
  4722: ra = 158, jump [a3]
      : @316 [@dyn 79]
  4727: jump @318 if a0 == 0
      : @317
  4730: a0 = 0x1
  4733: jump @466
      : @318
  4736: a0 = 0
  4738: jump @466
      : @319
  4741: a1 = u16 [a2 ]
  4743: jump @322 if a1 == 0
      : @320
  4746: a3 = 0x1
  4749: jump @323 if a1 != a3
      : @321
  4752: a1 = u64 [a2 + 0x8]
  4755: a1 = a1 << 0x4
  4758: a0 = a0 + a1
  4761: a0 = u16 [a0 + 0x8]
  4764: ret
      : @322
  4766: a0 = u16 [a2 + 0x2]
  4769: ret
      : @323
  4771: a0 = 0
  4773: ret
      : @324 [@dyn 80]
  4775: sp = sp + 0xffffffffffffff80
  4778: u64 [sp + 0x78] = ra
  4781: u64 [sp + 0x70] = s0
  4784: u64 [sp + 0x68] = s1
  4787: u64 [sp + 96] = 0
  4790: a4 = 0
  4792: a3 = 0x10000
  4797: a5 = u64 [a0]
  4799: u64 [sp + 0x10] = a5
  4802: a5 = u64 [a0 + 0x8]
  4805: u64 [sp + 0x8] = a5
  4808: a0 = u64 [a0 + 0x10]
  4811: u64 [sp + 0x20] = a0
  4814: u64 [sp + 0x58] = a1
  4817: a1 = a1 + 0xffffffffffffffff
  4820: u64 [sp] = a1
  4822: a1 = 0
  4824: t0 = 0xa0a0a0a0a0a0a0a
  4834: s0 = 0x101010101010100
  4844: a5 = 0x8080808080808080
  4854: u64 [sp + 0x30] = a2
  4857: u64 [sp + 0x50] = t0
  4860: u64 [sp + 0x48] = s0
  4863: u64 [sp + 0x40] = a5
  4866: fallthrough
      : @325
  4867: a0 = u64 [sp + 0x60]
  4870: a0 = a0 & 0x1
  4873: jump @357 if a0 != 0
      : @326
  4877: u64 [sp + 0x28] = a1
  4880: fallthrough
      : @327
  4881: jump @346 if a2 <u a4
      : @328
  4885: t1 = a2 - a4
  4888: a0 = u64 [sp + 0x58]
  4891: a1 = a0 + a4
  4894: u64 [sp + 0x60] = a1
  4897: jump @331 if t1 >=u 16
      : @329
  4901: a0 = a1
  4903: a1 = t1
  4905: s1 = a4
  4907: s0 = a2
  4909: ra = 162, jump @359
      : @330 [@dyn 81]
  4915: a2 = s0
  4917: a4 = s1
  4919: jump @341
      : @331
  4922: a0 = a1 + 0x7
  4925: a0 = a0 & 0xfffffffffffffff8
  4928: u64 [sp + 0x38] = a4
  4931: jump @333 if a0 != a1
      : @332
  4934: s1 = 0
  4936: jump @336
      : @333
  4938: s1 = a0 - a1
  4941: a0 = a1
  4943: a1 = s1
  4945: s0 = t1
  4947: ra = 164, jump @359
      : @334 [@dyn 82]
  4953: t1 = s0
  4955: a5 = u64 [sp + 0x40]
  4958: s0 = u64 [sp + 0x48]
  4961: t0 = u64 [sp + 0x50]
  4964: a4 = u64 [sp + 0x38]
  4967: a2 = a0 & 0x1
  4970: jump @336 if a2 == 0
      : @335
  4973: a2 = u64 [sp + 0x30]
  4976: jump @341
      : @336
  4978: a1 = t1 + 0xfffffffffffffff0
  4981: a0 = u64 [sp + 0x58]
  4984: a0 = a0 + a4
  4987: a0 = a0 + s1
  4990: jump @339 if a1 <u s1
      : @337
  4993: a2 = u64 [a0]
  4995: a3 = u64 [a0 + 0x8]
  4998: a4 = a2 ^ t0
  5001: a3 = a3 ^ t0
  5004: a4 = s0 - a4
  5007: a2 = a2 | a4
  5010: a4 = s0 - a3
  5013: a3 = a3 | a4
  5016: a2 = a2 & a3
  5019: a2 = a2 & a5
  5022: jump @339 if a2 != a5
      : @338
  5025: s1 = s1 + 0x10
  5028: a0 = a0 + 0x10
  5031: jump @337 if a1 >=u s1
      : @339
  5034: a1 = t1 - s1
  5037: ra = 166, jump @359
      : @340 [@dyn 83]
  5043: a1 = a1 + s1
  5046: a0 = a0 & 0x1
  5049: a2 = u64 [sp + 0x30]
  5052: a4 = u64 [sp + 0x38]
  5055: fallthrough
      : @341
  5056: a0 = a0 & 0x1
  5059: jump @345 if a0 == 0
      : @342
  5062: a0 = a1 + a4
  5065: a4 = a0 + 0x1
  5068: t0 = u64 [sp + 0x50]
  5071: s0 = u64 [sp + 0x48]
  5074: a5 = u64 [sp + 0x40]
  5077: jump @327 if a0 >=u a2
      : @343
  5081: a0 = u64 [sp + 0x60]
  5084: a1 = a1 + a0
  5087: a0 = u8 [a1]
  5089: jump @327 if a0 != 10
      : @344
  5094: s0 = 0
  5096: u64 [sp + 0x18] = a4
  5099: s1 = a4
  5101: a1 = u64 [sp + 0x28]
  5104: jump @348
      : @345
  5106: a4 = a2
  5108: fallthrough
      : @346
  5109: a1 = u64 [sp + 0x28]
  5112: jump @357 if a2 == a1
      : @347
  5116: s0 = 0x1
  5119: u64 [sp + 0x18] = a1
  5122: s1 = a2
  5124: fallthrough
      : @348
  5125: a0 = u64 [sp + 0x20]
  5128: a0 = u8 [a0]
  5130: u64 [sp + 0x38] = a4
  5133: jump @351 if a0 == 0
      : @349
  5136: a0 = u64 [sp + 0x8]
  5139: a3 = u64 [a0 + 0x18]
  5142: a2 = 0x4
  5145: a0 = u64 [sp + 0x10]
  5148: a1 = 0x10124
  5153: ra = 168, jump [a3]
      : @350 [@dyn 84]
  5158: a1 = u64 [sp + 0x28]
  5161: jump @356 if a0 != 0
      : @351
  5164: u64 [sp + 0x60] = s0
  5167: jump @353 if s1 != a1
      : @352
  5170: a0 = 0
  5172: jump @354
      : @353
  5174: a0 = u64 [sp]
  5176: a0 = a0 + s1
  5179: a0 = u8 [a0]
  5181: a0 = a0 + 0xfffffffffffffff6
  5184: a0 = a0 <u 0x1
  5187: fallthrough
      : @354
  5188: a1 = u64 [sp + 0x20]
  5191: u8 [a1] = a0
  5193: a0 = u64 [sp + 0x8]
  5196: a3 = u64 [a0 + 0x18]
  5199: a0 = u64 [sp + 0x28]
  5202: a2 = s1 - a0
  5205: a1 = u64 [sp + 0x58]
  5208: a1 = a1 + a0
  5211: a0 = u64 [sp + 0x10]
  5214: ra = 170, jump [a3]
      : @355 [@dyn 85]
  5219: a1 = u64 [sp + 0x18]
  5222: a2 = u64 [sp + 0x30]
  5225: a4 = u64 [sp + 0x38]
  5228: t0 = u64 [sp + 0x50]
  5231: s0 = u64 [sp + 0x48]
  5234: a5 = u64 [sp + 0x40]
  5237: jump @325 if a0 == 0
      : @356
  5241: a0 = 0x1
  5244: jump @358
      : @357
  5246: a0 = 0
  5248: fallthrough
      : @358
  5249: ra = u64 [sp + 0x78]
  5252: s0 = u64 [sp + 0x70]
  5255: s1 = u64 [sp + 0x68]
  5258: sp = sp + 0x80
  5262: ret
      : @359
  5264: a2 = 0
  5266: a3 = 0xa
  5269: jump @362 if a1 == 0
      : @360
  5272: a4 = u8 [a0]
  5274: jump @363 if a4 == a3
      : @361
  5277: a2 = a2 + 0x1
  5280: a0 = a0 + 0x1
  5283: jump @360 if a1 != a2
      : @362
  5286: a0 = 0
  5288: ret
      : @363
  5290: a0 = 0x1
  5293: a1 = a2
  5295: ret
      : @364 [@dyn 86]
  5297: sp = sp + 0xffffffffffffffd8
  5300: u64 [sp + 0x20] = ra
  5303: u64 [sp + 0x18] = s0
  5306: u64 [sp + 0x10] = s1
  5309: s0 = u64 [a0 + 0x10]
  5312: a2 = u8 [s0]
  5314: a4 = u64 [a0]
  5316: a3 = u64 [a0 + 0x8]
  5319: s1 = a1
  5321: jump @368 if a2 == 0
      : @365
  5324: u64 [sp + 0x8] = a3
  5327: a0 = u64 [sp + 0x8]
  5330: a3 = u64 [a0 + 0x18]
  5333: a1 = 0x10124
  5338: a2 = 0x4
  5341: a0 = a4
  5343: u64 [sp] = a4
  5345: ra = 174, jump [a3]
      : @366 [@dyn 87]
  5350: a3 = u64 [sp + 0x8]
  5353: a4 = u64 [sp]
  5355: jump @368 if a0 == 0
      : @367
  5358: a0 = 0x1
  5361: ra = u64 [sp + 0x20]
  5364: s0 = u64 [sp + 0x18]
  5367: s1 = u64 [sp + 0x10]
  5370: sp = sp + 0x28
  5373: ret
      : @368
  5375: a0 = s1 + 0xfffffffffffffff6
  5378: a0 = a0 <u 0x1
  5381: u8 [s0] = a0
  5383: a5 = u64 [a3 + 0x20]
  5386: a0 = a4
  5388: a1 = s1
  5390: ra = u64 [sp + 0x20]
  5393: s0 = u64 [sp + 0x18]
  5396: s1 = u64 [sp + 0x10]
  5399: sp = sp + 0x28
  5402: jump [a5]
      : @369 [@dyn 88]
  5404: a2 = a1
  5406: a1 = 0x10578
  5411: jump @295
      : @370
  5414: sp = sp + 0xffffffffffffff90
  5417: u64 [sp] = a0
  5419: u64 [sp + 0x8] = a1
  5422: u64 [sp + 0x10] = a2
  5425: u64 [sp + 0x18] = a3
  5428: t0 = sp
  5430: t1 = 0x8e
  5434: a2 = sp + 0x10
  5437: a3 = 0x90
  5441: a5 = 0x10558
  5446: u64 [sp + 64] = 0
  5449: a1 = sp + 0x50
  5452: u64 [sp + 0x50] = t0
  5455: u64 [sp + 0x58] = t1
  5458: u64 [sp + 0x60] = a2
  5461: u64 [sp + 0x68] = a3
  5464: u64 [sp + 0x20] = a5
  5467: u64 [sp + 40] = 0x2
  5471: u64 [sp + 0x30] = a1
  5474: u64 [sp + 56] = 0x2
  5478: a0 = sp + 0x20
  5481: a1 = a4
  5483: jump @217
      : @371 [@dyn 89]
  5486: trap
      : @372
  5487: a1 = a0
  5489: a3 = 0x134010
  5494: a0 = u8 [0x134010]
  5499: a2 = 0x134010
  5504: jump @374 if a0 == 0
      : @373
  5507: a0 = u64 [0x134020]
  5512: jump @375
      : @374
  5514: a0 = 0x30008
  5519: a4 = 0x1
  5522: u8 [0x134010] = a4
  5527: a3 = 0x134010
  5532: u8 [0x134018] = a4
  5537: u64 [0x134020] = a0
  5542: fallthrough
      : @375
  5543: a1 = a1 + a0
  5546: jump @379 if a1 <u a0
      : @376
  5549: a3 = u8 [0x134018]
  5554: jump @380 if a3 == 0
      : @377
  5557: a3 = 0x130008
  5562: jump @380 if a3 <u a1
      : @378
  5565: u64 [0x134020] = a1
  5570: a1 = a1 <u a0
  5573: a0 = 0 if a1 != 0
  5575: ret
      : @379
  5577: a1 = a1 <u a0
  5580: a0 = 0 if a1 != 0
  5582: ret
      : @380
  5584: sp = sp + 0xffffffffffffffd0
  5587: a0 = 0x10760
  5592: u64 [sp + 32] = 0
  5595: u64 [sp] = a0
  5597: u64 [sp + 8] = 0x1
  5601: u64 [sp + 16] = 0x8
  5605: u64 [sp + 24] = 0
  5608: a1 = 0x10770
  5613: a0 = sp
  5615: jump @217
      : @381
  5618: a3 = u64 [a0 + 0x8]
  5621: a2 = u64 [a0 + 0x10]
  5624: jump @383 if a2 >=u a3
      : @382
  5627: a3 = u64 [a0]
  5629: a3 = a3 + a2
  5632: a2 = a2 + 0x1
  5635: u8 [a3] = a1
  5637: u64 [a0 + 0x10] = a2
  5640: ret
      : @383
  5642: a0 = a2
  5644: a1 = a3
  5646: sp = sp + 0xffffffffffffffa0
  5649: u64 [sp] = a0
  5651: u64 [sp + 0x8] = a1
  5654: a0 = sp + 0x8
  5657: a1 = 0x64
  5660: a2 = sp
  5662: a3 = 0x10530
  5667: a4 = 0x2
  5670: u64 [sp + 48] = 0
  5673: u64 [sp + 0x40] = a0
  5676: u64 [sp + 0x48] = a1
  5679: u64 [sp + 0x50] = a2
  5682: u64 [sp + 0x58] = a1
  5685: a0 = sp + 0x40
  5688: u64 [sp + 0x10] = a3
  5691: u64 [sp + 0x18] = a4
  5694: u64 [sp + 0x20] = a0
  5697: u64 [sp + 0x28] = a4
  5700: a1 = 0x10908
  5705: a0 = sp + 0x10
  5708: jump @217
      : @384
  5711: sp = sp + 0xfffffffffffffff0
  5714: u64 [sp + 0x8] = ra
  5717: a3 = a1
  5719: u32 [sp + 0x4] = a0
  5722: a1 = sp + 0x4
  5725: a2 = 0x4
  5728: a0 = a3
  5730: ra = 0xec
  5734: fallthrough
      : @385
  5735: sp = sp + 0xffffffffffffffe8
  5738: u64 [sp + 0x10] = ra
  5741: u64 [sp + 0x8] = s0
  5744: u64 [sp] = s1
  5746: s1 = a0
  5748: a0 = u64 [a0 + 0x10]
  5751: s0 = a0 + a2
  5754: jump @389 if s0 <u a0
      : @386
  5757: a3 = u64 [s1 + 0x8]
  5760: jump @390 if a3 <u s0
      : @387
  5763: a3 = u64 [s1]
  5765: a0 = a0 + a3
  5768: ra = 180, jump @0
      : @388 [@dyn 90]
  5774: u64 [s1 + 0x10] = s0
  5777: ra = u64 [sp + 0x10]
  5780: s0 = u64 [sp + 0x8]
  5783: s1 = u64 [sp]
  5785: sp = sp + 0x18
  5788: ret
      : @389
  5790: sp = sp + 0xffffffffffffffc0
  5793: a0 = 0x104d1
  5798: a2 = sp + 0x30
  5801: u64 [sp + 32] = 0
  5804: u64 [sp + 0x30] = a0
  5807: u64 [sp + 56] = 0x2b
  5811: u64 [sp] = a2
  5813: u64 [sp + 8] = 0x1
  5817: u64 [sp + 16] = 0x8
  5821: u64 [sp + 24] = 0
  5824: a1 = 0x108d8
  5829: a0 = sp
  5831: jump @217
      : @390
  5834: a2 = 0x108f0
  5839: a0 = s0
  5841: a1 = a3
  5843: jump @266
      : @391
  5846: sp = sp + 0xffffffffffffff98
  5849: u64 [sp + 0x60] = ra
  5852: a0 = u64 [a0]
  5854: a1 = sp + 0x58
  5857: a2 = 0xb8
  5861: a3 = 0x106b0
  5866: u64 [sp + 0x48] = a1
  5869: u64 [sp + 0x50] = a2
  5872: u64 [sp + 56] = 0
  5875: u64 [sp + 0x58] = a0
  5878: a0 = sp + 0x48
  5881: u64 [sp + 0x18] = a3
  5884: u64 [sp + 32] = 0x1
  5888: u64 [sp + 0x28] = a0
  5891: u64 [sp + 48] = 0x1
  5895: a0 = sp
  5897: a1 = sp + 0x18
  5900: ra = 0xb6
  5904: sp = sp + 0xffffffffffffffc0
  5907: u64 [sp + 0x38] = ra
  5910: u64 [sp + 0x30] = s0
  5913: u64 [sp + 0x28] = s1
  5916: s1 = a1
  5918: u64 [sp] = a0
  5920: a0 = a1
  5922: ra = 0xbe
  5926: jump @433
      : @392 [@dyn 91]
  5929: a0 = u64 [sp + 0x8]
  5932: a1 = u64 [sp + 0x10]
  5935: u64 [sp + 0x18] = a0
  5938: u64 [sp + 0x20] = a1
  5941: a0 = sp + 0x18
  5944: ra = 0xc8
  5948: jump @416
      : @393 [@dyn 92]
  5951: sp = sp + 0xffffffffffffffc0
  5954: u64 [sp + 0x38] = ra
  5957: u64 [sp + 0x30] = s0
  5960: a3 = u64 [a0]
  5962: s0 = a1
  5964: a0 = sp
  5966: a2 = 0x30
  5969: a1 = a3
  5971: ra = 186, jump @0
      : @394 [@dyn 93]
  5977: a0 = u64 [s0]
  5979: a1 = u64 [s0 + 0x8]
  5982: a2 = sp
  5984: ra = 188, jump @295
      : @395 [@dyn 94]
  5990: ra = u64 [sp + 0x38]
  5993: s0 = u64 [sp + 0x30]
  5996: sp = sp + 0x40
  5999: ret
      : @396 [@dyn 95]
  6001: jump @400 if a0 == 0
      : @397
  6004: s0 = a0
  6006: a2 = 0x10430
  6011: a0 = sp + 0x8
  6014: s1 = a1
  6016: ra = 192, jump @170
      : @398 [@dyn 96]
  6022: a0 = u64 [sp + 0x10]
  6025: a1 = s0
  6027: a2 = s1
  6029: ra = 194, jump @0
      : @399 [@dyn 97]
  6035: a0 = u64 [sp + 0x8]
  6038: a1 = u64 [sp + 0x10]
  6041: a2 = u64 [sp]
  6043: u64 [a2] = a0
  6045: u64 [a2 + 0x8] = a1
  6048: u64 [a2 + 0x10] = s1
  6051: jump @413
      : @400
  6054: s0 = u64 [sp]
  6056: a3 = u64 [s1 + 0x8]
  6059: jump @407 if a3 == 0
      : @401
  6062: a1 = 0
  6064: a0 = u64 [s1]
  6066: a2 = a0 + 0x8
  6069: a3 = a3 << 0x4
  6072: a3 = a3 + a2
  6075: fallthrough
      : @402
  6076: a4 = u64 [a2]
  6078: a2 = a2 + 0x10
  6081: a1 = a1 + a4
  6084: jump @402 if a2 != a3
      : @403
  6087: a2 = u64 [s1 + 0x18]
  6090: jump @409 if a2 == 0
      : @404
  6093: a2 = 0xf
  6096: jump @408 if a2 <u a1
      : @405
  6099: a0 = u64 [a0 + 0x8]
  6102: jump @408 if a0 != 0
      : @406
  6105: a1 = 0
  6107: jump @409
      : @407
  6109: a0 = u64 [s1 + 0x18]
  6112: a1 = 0
  6114: jump @409 if a0 == 0
      : @408
  6117: u64 [0x30000] = t0
  6122: t0 = a1 >s 0
  6124: a1 = 0 if t0 == 0
  6126: t0 = u64 [0x30000]
  6131: a1 = a1 << 0x1
  6134: fallthrough
      : @409
  6135: a2 = 0x104b8
  6140: a0 = sp + 0x8
  6143: ra = 196, jump @170
      : @410 [@dyn 98]
  6149: a0 = sp + 0x8
  6152: a1 = s1
  6154: ra = 0xc6
  6158: a2 = a1
  6160: a1 = 0x10128
  6165: jump @295
      : @411 [@dyn 99]
  6168: jump @414 if a0 != 0
      : @412
  6171: a0 = u64 [sp + 0x8]
  6174: a1 = u64 [sp + 0x10]
  6177: a2 = u64 [sp + 0x18]
  6180: u64 [s0] = a0
  6182: u64 [s0 + 0x8] = a1
  6185: u64 [s0 + 0x10] = a2
  6188: fallthrough
      : @413
  6189: ra = u64 [sp + 0x38]
  6192: s0 = u64 [sp + 0x30]
  6195: s1 = u64 [sp + 0x28]
  6198: sp = sp + 0x40
  6201: ret
      : @414
  6203: a0 = 0x102e0
  6208: a3 = 0x107a8
  6213: a4 = 0x103a8
  6218: a1 = 0x56
  6221: a2 = sp + 0x27
  6224: jump @370
      : @415 [@dyn 100]
  6227: trap
      : @416
  6228: sp = sp + 0xffffffffffffffc8
  6231: u64 [sp + 0x30] = ra
  6234: u64 [sp + 0x28] = s0
  6237: u64 [sp + 0x20] = s1
  6240: s0 = u64 [a0 + 0x8]
  6243: a1 = 0x130008
  6248: a2 = 0x4000
  6252: a3 = s0 >> 0x20
  6255: u64 [sp] = a1
  6257: u64 [sp + 0x8] = a2
  6260: u64 [sp + 16] = 0
  6263: jump @418 if a3 == 0
      : @417
  6266: a0 = 0x10813
  6271: a3 = 0x107a8
  6276: a4 = 0x10830
  6281: a1 = 0x16
  6284: a2 = sp + 0x1e
  6287: jump @370
      : @418
  6290: s1 = u64 [a0]
  6292: jump @421 if s0 >u 63
      : @419
  6296: a1 = s0 << 0x3a
  6299: a1 = a1 >> 0x38
  6302: a0 = sp
  6304: ra = 202, jump @381
      : @420 [@dyn 101]
  6310: jump @428
      : @421
  6312: a0 = s0 >> 0xe
  6315: jump @424 if a0 != 0
      : @422
  6318: a0 = s0 << 0x2
  6321: a0 = a0 + 0x1
  6324: u16 [sp + 0x1e] = a0
  6327: a0 = sp
  6329: a1 = sp + 0x1e
  6332: a2 = 0x2
  6335: ra = 204, jump @385
      : @423 [@dyn 102]
  6341: jump @428
      : @424
  6343: a0 = s0 >> 0x1e
  6346: jump @426 if a0 != 0
      : @425
  6349: i32 a0 = s0 << 0x2
  6352: a0 = a0 + 0x2
  6355: a1 = sp
  6357: ra = 0xd0
  6361: jump @384
      : @426
  6364: a0 = sp
  6366: a1 = 0x3
  6369: ra = 206, jump @381
      : @427 [@dyn 103]
  6375: a1 = sp
  6377: a0 = s0
  6379: ra = 208, jump @384
      : @428 [@dyn 104]
  6385: a0 = sp
  6387: a1 = s1
  6389: a2 = s0
  6391: ra = 210, jump @385
      : @429 [@dyn 105]
  6397: a3 = u64 [sp + 0x10]
  6400: jump @431 if a3 >=u 16385
      : @430
  6405: a0 = 0x1
  6408: a1 = a3
  6410: ra = 212, jump @463
      : @431 [@dyn 106]
  6416: t0 = 214, jump @468
      : @432 [@dyn 107]
  6422: jump @266
      : @433
  6425: a2 = u64 [a0 + 0x8]
  6428: a1 = u64 [a0 + 0x18]
  6431: a3 = 0x1
  6434: jump @437 if a2 == a3
      : @434
  6437: jump @438 if a2 != 0
      : @435
  6440: jump @438 if a1 != 0
      : @436
  6443: a0 = 0x1
  6446: jump @396
      : @437
  6449: jump @439 if a1 == 0
      : @438
  6452: a0 = 0
  6454: jump @396
      : @439
  6457: a1 = u64 [a0]
  6459: a0 = u64 [a1]
  6461: a1 = u64 [a1 + 0x8]
  6464: jump @396
      : @440
  6467: a3 = u64 [a0 + 0x8]
  6470: jump @442 if a3 <u a1
      : @441
  6473: a2 = u64 [a0]
  6475: a3 = a3 - a1
  6478: a4 = a2 + a1
  6481: u64 [a0] = a4
  6483: u64 [a0 + 0x8] = a3
  6486: a0 = a2
  6488: ret
      : @442
  6490: sp = sp + 0xffffffffffffffd0
  6493: a0 = 0x10798
  6498: u64 [sp + 32] = 0
  6501: u64 [sp] = a0
  6503: u64 [sp + 8] = 0x1
  6507: u64 [sp + 16] = 0x8
  6511: u64 [sp + 24] = 0
  6514: a1 = 0x10920
  6519: a0 = sp
  6521: jump @217
      : @443 [@dyn 108]
  6524: sp = sp + 0xffffffffffffffa0
  6527: u64 [sp + 0x58] = ra
  6530: u64 [sp + 0x50] = s0
  6533: u64 [sp + 0x48] = s1
  6536: s0 = a1
  6538: s1 = u64 [a1 + 0x8]
  6541: a0 = u64 [a1]
  6543: a3 = u64 [s1 + 0x18]
  6546: a1 = 0x10848
  6551: a2 = 0x11
  6554: u64 [sp + 0x8] = a0
  6557: u64 [sp] = a3
  6559: ra = 218, jump [a3]
      : @444 [@dyn 109]
  6564: a1 = 0x1
  6567: jump @460 if a0 != 0
      : @445
  6571: a0 = u8 [s0 + 0x12]
  6574: a0 = a0 & 0x80
  6578: jump @450 if a0 != 0
      : @446
  6581: a1 = 0x105aa
  6586: a2 = 0x1
  6589: s1 = u64 [sp + 0x8]
  6592: a0 = s1
  6594: a3 = u64 [sp]
  6596: ra = 220, jump [a3]
      : @447 [@dyn 110]
  6601: jump @454 if a0 != 0
      : @448
  6604: a0 = s0
  6606: ra = 0xde
  6610: a1 = 0x10675
  6615: a2 = 0x2
  6618: jump @267
      : @449 [@dyn 111]
  6621: jump @457
      : @450
  6623: a1 = 0x105ab
  6628: a2 = 0x2
  6631: a0 = u64 [sp + 0x8]
  6634: a3 = u64 [sp]
  6636: ra = 224, jump [a3]
      : @451 [@dyn 112]
  6641: a1 = 0x1
  6644: jump @460 if a0 != 0
      : @452
  6647: a0 = sp + 0x2f
  6650: a1 = u64 [s0 + 0x10]
  6653: a2 = sp + 0x10
  6656: u8 [sp + 47] = 0x1
  6660: a3 = u64 [sp + 0x8]
  6663: u64 [sp + 0x10] = a3
  6666: u64 [sp + 0x18] = s1
  6669: u64 [sp + 0x20] = a0
  6672: a0 = 0x10578
  6677: u64 [sp + 0x30] = a2
  6680: u64 [sp + 0x38] = a0
  6683: u64 [sp + 0x40] = a1
  6686: a0 = sp + 0x30
  6689: ra = 0xe2
  6693: a1 = 0x10675
  6698: a2 = 0x2
  6701: jump @267
      : @453 [@dyn 113]
  6704: jump @455 if a0 == 0
      : @454
  6707: a1 = 0x1
  6710: jump @460
      : @455
  6712: a1 = 0x105a8
  6717: a0 = sp + 0x10
  6720: a2 = 0x2
  6723: ra = 228, jump @324
      : @456 [@dyn 114]
  6729: s1 = u64 [sp + 0x8]
  6732: fallthrough
      : @457
  6733: a1 = 0x1
  6736: jump @460 if a0 != 0
      : @458
  6739: a1 = 0x104d0
  6744: a2 = 0x1
  6747: a0 = s1
  6749: a3 = u64 [sp]
  6751: ra = 230, jump [a3]
      : @459 [@dyn 115]
  6756: a1 = a0
  6758: fallthrough
      : @460
  6759: a0 = a1
  6761: ra = u64 [sp + 0x58]
  6764: s0 = u64 [sp + 0x50]
  6767: s1 = u64 [sp + 0x48]
  6770: sp = sp + 0x60
  6773: ret
      : @461 [@dyn 116]
  6775: sp = sp + 0xffffffffffffffa8
  6778: u64 [sp + 0x50] = ra
  6781: a0 = u8 [a0]
  6783: t0 = 0x10ba8
  6788: a3 = 0x10bd0
  6793: a4 = sp + 0x40
  6796: a5 = 0x8e
  6800: t1 = 0x106b0
  6805: u64 [sp + 32] = 0
  6808: u64 [sp + 0x30] = a4
  6811: u64 [sp + 0x38] = a5
  6814: a4 = a0 << 0x2
  6817: a4 = a4 + a3
  6820: a4 = i32 [a4]
  6822: a0 = a0 << 0x3
  6825: a0 = a0 + t0
  6828: a0 = u64 [a0]
  6830: a3 = a3 + a4
  6833: a4 = sp + 0x30
  6836: u64 [sp + 0x40] = a3
  6839: u64 [sp + 0x48] = a0
  6842: a0 = u64 [a1]
  6844: a1 = u64 [a1 + 0x8]
  6847: u64 [sp] = t1
  6849: u64 [sp + 8] = 0x1
  6853: u64 [sp + 0x10] = a4
  6856: u64 [sp + 24] = 0x1
  6860: a2 = sp
  6862: ra = 234, jump @295
      : @462 [@dyn 117]
  6868: ra = u64 [sp + 0x50]
  6871: sp = sp + 0x58
  6874: ret
      : @463
  6876: sp = sp + 0xffffffffffffffb8
  6879: u64 [sp + 0x40] = ra
  6882: u64 [sp + 0x38] = s0
  6885: u64 [sp + 0x30] = s1
  6888: a2 = a1
  6890: a1 = 0x130008
  6895: s1 = 0x1
  6898: s0 = 0x8
  6901: ecalli 2 // 'seal_return'
  6903: u64 [sp + 32] = 0
  6906: a0 = 0x10b10
  6911: u64 [sp] = a0
  6913: u64 [sp + 0x8] = s1
  6916: u64 [sp + 0x10] = s0
  6919: u64 [sp + 24] = 0
  6922: a1 = 0x10b20
  6927: a0 = sp
  6929: jump @217
      : @464 [@dyn 118]
  6932: ra = u64 [sp + 0x8]
  6935: sp = sp + 0x10
  6938: ret
      : @465
  6940: a2 = a2 | a3
  6943: a3 = a5 | t1
  6946: a0 = a0 | a4
  6949: a1 = a1 | a2
  6952: a0 = a0 | a3
  6955: a0 = a0 << 0x20
  6958: a0 = a0 | a1
  6961: jump [t0]
      : @466
  6963: ra = u64 [sp + 0x70]
  6966: s0 = u64 [sp + 0x68]
  6969: s1 = u64 [sp + 0x60]
  6972: sp = sp + 0x78
  6975: ret
      : @467
  6977: ra = u64 [sp + 0x30]
  6980: s0 = u64 [sp + 0x28]
  6983: s1 = u64 [sp + 0x20]
  6986: sp = sp + 0x38
  6989: ret
      : @468
  6991: a2 = 0x109b8
  6996: a1 = 0x4000
  7000: a0 = a3
  7002: jump [t0]
